# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    name: Automated Tests
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Write lib/firebase_options.dart
        run: echo $FIREBASE_OPTION | base64 -d > lib/firebase_options.dart
        env:
          FIREBASE_OPTION: ${{secrets.FIREBASE_OPTION_CONTENT}}

        # Note: This workflow uses the latest stable version of the Dart SDK.
        # You can specify other versions if desired, see documentation here:
        # https://github.com/dart-lang/setup-dart/blob/main/README.md
        # - uses: dart-lang/setup-dart@v1
      - uses: dart-lang/setup-dart@9a04e6d73cca37bd455e0608d7e5092f881fd603
      
      - name: Flutter action
        # You may pin to the exact commit or the version.
        # uses: subosito/flutter-action@5e1529bc12adae5b26f30f0a4046ac743d6f0c5d
        uses: subosito/flutter-action@v2.3.0

      - name: Install dependencies
        run: flutter pub get

      # Uncomment this step to verify the use of 'dart format' on each commit.
      - name: Verify formatting
        run: dart format --output=none --set-exit-if-changed .

      # Your project will need to have tests in test/ and a dependency on
      # package:test for this step to succeed. Note that Flutter projects will
      # want to change this to 'flutter test'.
      - name: Run Flutter tests
        run: flutter test

      - name: Run Flutter analyze
        run: |
          flutter analyze
          flutter test --no-sound-null-safety
          
  build:
    name: Build Apps
    runs-on: macos-latest
    steps:
      - name: Export Release Timestamp
        run: echo "APP_VERSION=v$(date +'%Y.%m.%d.%H.%M.%S')" >> $GITHUB_ENV
      - name: Checkout repository
        uses: actions/checkout@v1
      - name: Set up Java
        uses: actions/setup-java@v2
        with:
          java-version: '15'
          distribution: 'adopt'
      - name: Build Android App
        run: flutter build apk --split-per-abi
      - name: Build iOS App
        run: |
          flutter build ios --no-codesign
          cd build/ios/iphoneos
          mkdir Payload
          cd Payload
          ln -s ../Runner.app
          cd ..
          zip -r app.ipa Payload
      - name: Release Apps
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ env.APP_VERSION }}
          name: ${{ env.APP_VERSION }}
          token: ${{ secrets.GITHUB_TOKEN }}
          artifacts: 'build/app/outputs/apk/release/*.apk,build/ios/iphoneos/app.ipa'

